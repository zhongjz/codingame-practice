#!/bin/bash

# CodinGame planet is being attacked by slimy insectoid aliens.
# <---
# Hint:To protect the planet, you can implement the pseudo-code provided in the statement, below the player.


# game loop

declare -A eDist
declare -A eSpeed

while true; do
    # enemy1: name of enemy 1
    read enemy1
    # dist1: distance to enemy 1
    read dist1
    # enemy2: name of enemy 2
    read enemy2
    # dist2: distance to enemy 2
    read dist2
    
    echo "Debug messages..." "enemy1" $enemy1 "dist1" $dist1 "enemy2" $enemy2 "dist2" $dist2 >&2
    if [[ $enemy1 != "Nobody" ]]; then
		if [[ -z ${eDist[$enemy1]} ]]; then
			eDist[$enemy1]=$dist1
			eSpeed[$enemy1]=0
		else
			let eSpeed[$enemy1]=eDist[$enemy1]-dist1
			eDist[$enemy1]=$dist1
		fi
		echo "Debug messages..." "Add" $enemy1", dist="$dist1 "speed="${eSpeed[$enemy1]} >&2
    fi

    if [[ $enemy2 != "Nobody" ]]; then
		if [[ -z ${eDist[$enemy2]} ]]; then
			eDist[$enemy2]=$dist2
			eSpeed[$enemy2]=0
		else
			let eSpeed[$enemy2]=eDist[$enemy2]-dist2
			eDist[$enemy2]=$dist2
		fi
		echo "Debug messages..." "Add" $enemy2", dist="$dist2 "speed="${eSpeed[$enemy2]} >&2
    fi

	danger=""
	closest=10000
	for name in ${!eDist[*]};do
		echo "Debug messages..." "Checking" $name", dist="${eDist[$name]} "speed="${eSpeed[$name]} >&2
		if [[ ! -z ${eDist[$name]} ]]; then
			let nextdist=eDist[$name]-eSpeed[$name]
			if [[ $nextdist -lt $closest ]]; then
				danger=$name
				closest=$nextdist
				echo "Debug messages..." $name "is more danger, next distance will be:"$closest >&2
			fi
		else
		echo "Debug messages... Destroyed, pass!" >&2
		fi
	done

	echo $danger
	eDist[$danger]=""
	eSpeed[$danger]=""
	
    # Write an action using echo
    # To debug: echo "Debug messages..." >&2

    # echo "name of the enemy" # You have to output a correct ship name to shoot ("Buzz", enemy1, enemy2, ...)
done